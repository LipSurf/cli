#!/usr/bin/env node
'use strict';
const meow = require('meow');
const rollup = require('rollup');
const getConfig = require('./rollup.config.js');


(async () => {
const cli = meow(`
	Usage
	  $ lipsurf-cli build [outdir]

	Options
	  --watch

	Examples
	  $ lipsurf-cli build --watch
`, {
	flags: {
		watch: {
			type: 'boolean',
		}
	}
});

async function build(outputDir, flags) {
    const watch = flags.watch;
    const config = getConfig(outputDir || 'dist');
    if (watch) {
      const watcher = rollup.watch(config);
      watcher.on('event', event => {
        switch (event.code) {
          case 'END':
            console.log('Done building. Watching...');
            break;
          case 'ERROR':
          case 'FATAL':
            console.log(event.code, event.error);
            break;
        }
      });
    } else {
      for (let conf of config) {
        const bundle = await rollup.rollup(conf)
        await bundle.generate(conf);
        await bundle.write(conf);
      }
      console.log(`Done building.`);
    }
}

await build(cli.input[1], cli.flags);
})();
